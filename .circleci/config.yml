# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2.1

orbs:
  helm: banzaicloud/helm@0.0.5


jobs:
  build:
    docker:
      - image: circleci/golang:1.13

    steps:
      - checkout

      - run:
          name: Run fmt
          command: |
            make check-fmt

      - run:
          name: Run golint
          command: |
            make lint

      - run:
          name: Run misspell
          command: |
            make check-misspell

      - run:
          name: Run ineffassign
          command: |
            make ineffassign

      - run:
          name: Check generators for unwanted diffs
          command: |
            make check-diff

      - run:
          name: Test
          command: |
            make test

  e2e-test:
    machine:
      image: ubuntu-1604:201903-01
      docker_layer_caching: true
    environment:
      GO_VERSION: '1.13'
      K8S_VERSION: 'v1.15.4'
      VAULT_VERSION: '1.0.0'
      KUBECONFIG: '/home/circleci/.kube/config'
      MINIKUBE_VERSION: 'v1.4.0'
      MINIKUBE_WANTUPDATENOTIFICATION: 'false'
      MINIKUBE_WANTREPORTERRORPROMPT: 'false'
      MINIKUBE_HOME: '/home/circleci'
      CHANGE_MINIKUBE_NONE_USER: 'true'
      GOPATH: '/home/circleci/go'
    steps:
      - run:
          name: Setup minikube
          command: |
            curl -Lo minikube https://github.com/kubernetes/minikube/releases/download/${MINIKUBE_VERSION}/minikube-linux-amd64 \
            && chmod +x minikube \
            && sudo mv minikube /usr/local/bin/

      - run:
          name: Start minikube
          background: true
          command: |
            sudo -E minikube start --vm-driver=none --cpus 2 --memory 4096 --kubernetes-version=${K8S_VERSION}

      - run:
          name: Setup kubectl
          command: |
            curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/${K8S_VERSION}/bin/linux/amd64/kubectl \
            && chmod +x kubectl \
            && sudo mv kubectl /usr/local/bin/

            mkdir -p ${HOME}/.kube
            touch ${HOME}/.kube/config

      - checkout
      - run:
          name: Create go directory
          command: |
            sudo mkdir /go
            sudo chmod 777 /go

      - run:
          name: Setup golang
          command: |
            sudo rm -rf /usr/local/go
            curl \
              -Lo go.linux-amd64.tar.gz \
              "https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz" \
            && sudo tar -C /usr/local -xzf go.linux-amd64.tar.gz
            echo 'export PATH="$GOPATH/bin:$PATH"' >> "${BASH_ENV}"
            rm go.linux-amd64.tar.gz

      - run:
          name: Build docker image
          command: |
            make docker-build IMG='controller:local'

      - run:
          name: Wait for minikube
          command: |
            timeout 180s bash \<<EOT
              set -o pipefail
              function is_ready()
              {
                kubectl get nodes -o json \
                  | jq '.items[].status.conditions[] | select(.type=="Ready" and .status=="True")'
              }

              until is_ready
              do
                sleep 1
              done
            EOT

      - run:
          name: Setup helm
          command: |
            curl -L https://git.io/get_helm.sh | bash
            helm init
            helm repo add banzaicloud-stable https://kubernetes-charts.banzaicloud.com/

      - run:
          name: Create logging namespace
          command: |
            kubectl create namespace logging

      - run:
          name: Start Minio
          command: |
            kubectl create -f hack/minio.yaml
            kubectl wait --namespace logging --for=condition=available deployment/minio-deployment --timeout=120s
            minio="$(kubectl get pod --namespace logging -l app=minio -o 'jsonpath={.items[0].metadata.name}')"
            kubectl wait --namespace logging --for=condition=Ready pod "${minio}" --timeout=120s

      - run:
          name: Setup minio cli
          command: |
            kubectl create -f hack/minio-mc.yaml
            kubectl wait --namespace logging --for=condition=available deployment/minio-mc-deployment --timeout=120s
            mc_pod="$(kubectl get pod --namespace logging -l app=minio-mc -o 'jsonpath={.items[0].metadata.name}')"
            kubectl wait --namespace logging --for=condition=Ready pod "${mc_pod}" --timeout=120s
            kubectl exec --namespace logging "${mc_pod}" -- \
              mc config host add minio \
                'http://minio-service.logging.svc.cluster.local:9000' \
                'minio_access_key' \
                'minio_secret_key'

      - run:
          name: Test
          command: |
            hack/test.sh

workflows:
  version: 2
  build:
    jobs:
      - build
      - e2e-test:
          requires:
            - build
  helm-chart:
    jobs:
      - helm/lint-chart:
          filters:
            tags:
              ignore: /.*/

      - helm/publish-chart:
          context: helm
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /chart\/.*\/\d+.\d+.\d+.*/
